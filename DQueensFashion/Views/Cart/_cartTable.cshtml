@model DQueensFashion.Models.ViewCartViewModel
@using DQueensFashion.Utilities

    <div class="viewCartTable">

        <div class="d-xs-block d-sm-block d-md-none d-lg-none d-xl-none">

            <table class="table">
                <tr>
                    <th>
                        Items
                    </th>
                </tr>

                @foreach (var item in Model.Carts)
                {
                    <tr>

                        <td style="vertical-align:middle">
                            <div class="row">
                                <div class="col-3">
                                    @if (!string.IsNullOrEmpty(item.MainImage))
                                    {
                                        <img src="@Url.Content(item.MainImage)" style="width:70px;height:70px" />
                                    }
                                </div>
                                <div class="col-9">
                                    <div></div>
                                    @Html.DisplayFor(modelItem => item.Product.Name)
                                    <div onclick="RemoveCartItem(@item.Product.Id)" style="cursor:pointer">
                                        <img src="~/Content/Images/x-circle.svg" />
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-3 pt-1">
                                    @Html.DisplayFor(modelItem => item.UnitPrice)
                                </div>
                                <div class="col-6 p-0">
                                    <div class="input-group">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn quantity-button minus-button" onclick="DecreaseQuantity(@item.Product.Id)">
                                                -
                                            </button>
                                        </span>
                                        <input type="text" class="cart-quantity" value="@item.Quantity" disabled>
                                        <span class="input-group-btn">
                                            <button type="button" class="btn quantity-button plus-button" onclick="IncreaseQuantity(@item.Product.Id)">
                                                +
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-3 pt-1">
                                    @Html.DisplayFor(modelItem => item.TotalPrice)
                                </div>
                            </div>
                        </td>

                    </tr>
                }

            </table>
        </div>


        <div class="d-none d-md-block">
            <table class="table">
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>

                @foreach (var item in Model.Carts)
                {
            <tr>

                <td style="vertical-align:middle">
                    <div onclick="RemoveCartItem(@item.Product.Id)" style="cursor:pointer">
                        <img src="~/Content/Images/x-circle.svg" />
                    </div>
                </td>
                @{
                    if (!string.IsNullOrEmpty(item.MainImage))
                    {
                        <td>
                            <img src="@Url.Content(item.MainImage)" style="width:70px;height:70px" />
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                }
                <td style="vertical-align:middle">
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td style="vertical-align:middle">
                    @Html.Raw(item.Description.Replace(Environment.NewLine, "<br/>"))
                    @if (item.Product.CategoryId == AppConstant.CustomMadeCategoryId)
                    {
                        <div style="color:#007bff;cursor:pointer" onclick="EditCartCustomMade(@item.Product.Id)">Edit</div>
                    }

                </td>
                <td style="vertical-align:middle">
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td style="vertical-align:middle">

                    <div class="input-group">
                        <span class="input-group-btn">
                            <button type="button" class="btn quantity-button minus-button" onclick="DecreaseQuantity(@item.Product.Id)">
                                -
                            </button>
                        </span>
                        <input type="text" class="cart-quantity" value="@item.Quantity" disabled>
                        <span class="input-group-btn">
                            <button type="button" class="btn quantity-button plus-button" onclick="IncreaseQuantity(@item.Product.Id)">
                                +
                            </button>
                        </span>
                    </div>

                </td>
                <td style="vertical-align:middle">
                    @Html.DisplayFor(modelItem => item.TotalPrice)
                </td>
            </tr>
                }

            </table>

        </div>

        <hr />
        <div>

            <div style="text-align:right">
                <div class="subtotal" style="text-align:right">
                    <span>SUBTOTAL: $@Model.SubTotal</span>
                </div>

                @{
                    if (Model.Count < 1)
                    {
                        using (Html.BeginForm("CheckOut", "Cart"))
                        {
                            @Html.AntiForgeryToken()
                            <input type="submit" class="btn" style="background-color:#E97128;color:white;width:300px;height:50px;"
                                   value="CHECK OUT" disabled/>
                        }
                    }
                    else
                    {
                        using (Html.BeginForm("CheckOut", "Cart"))
                        {
                            @Html.AntiForgeryToken()
                            <input type="submit" class="btn" style="background-color:#E97128;color:white;width:300px;height:50px;"
                                   value="CHECK OUT" />
                        }
                    }
                }

            </div>
            <div class="mb-5"></div>
        </div>
    </div>
   
    <style>
        .quantity-button {
            border-radius: 0;
            border-top: 1px solid black;
            border-bottom: 1px solid black;
        }

        .minus-button {
            border-left: 1px solid black;
        }

        .plus-button {
            border-right: 1px solid black;
        }

        .cart-quantity {
            width: 50px;
            border: none;
            text-align: center;
            border-radius: 0;
            border-top: 1px solid black;
            border-bottom: 1px solid black;
        }

        .subtotal{
            font-size:30px;
            font-weight:300;
        }
    </style>
