@model DQueensFashion.Models.Cart
@using DQueensFashion.Utilities

@using (Html.BeginForm("AddToCartCustomMade", "Cart"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div style="min-height:78vh;max-height:78vh;overflow-y:auto;overflow-x:hidden">

            <div class="row">
                <div class="col-5 p-1">
                    <img src="@Model.MainImage" style="width:100px;height:100px" />
                </div>
                <div class="col-7 p-1">
                    <div style="font-size:15px;font-weight:500">
                        @Model.ProductName
                    </div>
                    <div style="font-size:15px;font-weight:400">@Model.CategoryName</div>
                    <span class="product-initial-price" style="font-size:12px">$@Model.InitialPrice</span>
                    <span class="pl-1" style="font-size:12px">-@Model.Discount%</span>
                    <div style="font-weight:500;color:#B01A24">$@Model.UnitPrice</div>
                </div>

            </div>


            <input type="hidden" id="ProductId" value="@Model.ProductId" />
            <input type="hidden" id="xsQty" value="@Model.ExtraSmallQuantity" />
            <input type="hidden" id="smQty" value="@Model.SmallQuantiy" />
            <input type="hidden" id="mQty" value="@Model.MediumQuantiy" />
            <input type="hidden" id="lQty" value="@Model.LargeQuantity" />
            <input type="hidden" id="xlQty" value="@Model.ExtraLargeQuantity" />


            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <div class="col-form-label">Size</div>
                        <select class="form-control-sm col-12" id="ReadyMadeSize" onchange="GetProductReadyMadeQuantity()">
                            @foreach (var size in AppConstant.ReadyMadeSizes)
                            {
                                <option value="@size">@size</option>
                            }
                        </select>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-form-label">Quantity</div>
                <select class="form-control-sm col-12" id="Quantity">
                    @for (int i = 1; i <= Model.ExtraSmallQuantity; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
            @if (Model.ExtraSmallQuantity < 1)
            {
                <p id="sizeValidation" class="text-danger mb-1">Size not available for this item</p>
            }
            else
            {
                <p id="sizeValidation" class="text-danger mb-1"></p>
            }


        </div>
        <input type="button" value="ADD TO CART" class="btn mt-0"
               style="background-color:#E97128;color:white;border-radius:0;margin:10px;position:absolute;bottom:10px;right:10px;"
               id="submitCartButton" onclick="AddToCartReadyMadePost()" />

    </div>
}


<script>

    var readyMadeSize = document.getElementById("ReadyMadeSize");
    var xsQty = document.getElementById("xsQty").value;
    var smQty = document.getElementById("smQty").value;
    var mQty = document.getElementById("mQty").value;
    var lQty = document.getElementById("lQty").value;
    var xlQty = document.getElementById("xlQty").value;
    var Qty = document.getElementById("Quantity");
    var submitCartButton = document.getElementById("submitCartButton");
    var sizevalidationtext = document.getElementById("sizeValidation");

    if (xsQty < 1) {
        submitCartButton.disabled = true;
    }

    function GetProductReadyMadeQuantity() {
        var str = "";

        if (readyMadeSize.value == "Extra small (XS)") {
            if (xsQty < 1) {
                sizevalidationtext.innerHTML = "Size not available for this item";
                submitCartButton.disabled = true;
            } else {
                sizevalidationtext.innerHTML = "";
                submitCartButton.disabled = false;
            }
            for (var i = 1; i <= xsQty; i++) {
                str += "<option value=" + i + "\>" + i + "</option>"
            }
        } else if (readyMadeSize.value == "Small (S)") {
            if (smQty < 1) {
                sizevalidationtext.innerHTML = "Size not available for this item";
                submitCartButton.disabled = true;
            } else {
                sizevalidationtext.innerHTML = "";
                submitCartButton.disabled = false;
            }
            for (var i = 1; i <= smQty; i++) {
                str += "<option value=" + i + "\>" + i + "</option>"
            }
        } else if (readyMadeSize.value == "Medium (M)") {
            if (mQty < 1) {
                sizevalidationtext.innerHTML = "Size not available for this item";
                submitCartButton.disabled = true;
            } else {
                sizevalidationtext.innerHTML = "";
                submitCartButton.disabled = false;
            }
            for (var i = 1; i <= mQty; i++) {
                str += "<option value=" + i + "\>" + i + "</option>"
            }
        } else if (readyMadeSize.value == "Large (L)") {
            if (lQty < 1) {
                sizevalidationtext.innerHTML = "Size not available for this item";
                submitCartButton.disabled = true;
            } else {
                sizevalidationtext.innerHTML = "";
                submitCartButton.disabled = false;
            }
            for (var i = 1; i <= lQty; i++) {
                str += "<option value=" + i + "\>" + i + "</option>"
            }
        } else if (readyMadeSize.value == "Extra large (XL)") {
            if (xlQty < 1) {
                sizevalidationtext.innerHTML = "Size not available for this item";
                submitCartButton.disabled = true;
            } else {
                sizevalidationtext.innerHTML = "";
                submitCartButton.disabled = false;
            }
            for (var i = 1; i <= xlQty; i++) {
                str += "<option value=" + i + "\>" + i + "</option>"
            }
        }

        Qty.innerHTML = str;

    }
</script>