@model DQueensFashion.Models.AddProductViewModel
@using DQueensFashion.Utilities

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_dashboardLayout.cshtml";
}
<script src="~/Content/js/jquery.js"></script>

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
<style>
    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #212529;
    }
</style>

    @using (Html.BeginForm("AddProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div>
            <div class="form-horizontal">
                <h6 style="text-align:center">Add Product</h6>
                @Html.HiddenFor(model => model.CustomMadeCategory)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12 col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label  col-12" })
                                        <div class="col-12">
                                            <select class="form-control" name="@Html.NameFor(m=>m.CategoryId)">
                                                @foreach (var item in Model.Categories)
                                                {
                                                    <option value="@item.Id">@item.Name</option>
                                                }
                                            </select>
                                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 5 })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "product-price" } })
                                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @id = "product-discount" } })
                                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-3">
                                    <div class="form-group">
                                        @Html.Label("Total", htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            <input type="text" value="@Model.Price" disabled class="form-control" id="product-total-price" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="col-12">
                                        <select class="form-control js-example-tokenizer" multiple="multiple" name="Tags" style="border:1px solid #ced4da"></select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @{
                    if (Model.CustomMadeCategory)
                    {
                        <div class="col-12">
                            <div class="col-4">
                                <div class="form-group">
                                    <div class="col-12">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.WaistLength)
                                            @Html.LabelFor(m => m.WaistLength)
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-group">
                                    <div class="col-12">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.BurstSize)
                                            @Html.LabelFor(m => m.BurstSize)
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-group">
                                    <div class="col-12">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.ShoulderLength)
                                            @Html.LabelFor(m => m.ShoulderLength)
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    if (Model.ReadyMadeCategory)
                    {
                        <div class="card">
                            <div class="card-header">
                                READY MADE SIZES
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ExtraSmallQuantity, htmlAttributes: new { @class = "control-label col-12" })
                                            <div class="col-12">
                                                @Html.EditorFor(model => model.ExtraSmallQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ExtraSmallQuantity, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SmallQuantiy, htmlAttributes: new { @class = "control-label col-12" })
                                            <div class="col-12">
                                                @Html.EditorFor(model => model.SmallQuantiy, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SmallQuantiy, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MediumQuantiy, htmlAttributes: new { @class = "control-label col-12" })
                                            <div class="col-12">
                                                @Html.EditorFor(model => model.MediumQuantiy, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MediumQuantiy, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LargeQuantity, htmlAttributes: new { @class = "control-label col-12" })
                                            <div class="col-12">
                                                @Html.EditorFor(model => model.LargeQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LargeQuantity, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ExtraLargeQuantity, htmlAttributes: new { @class = "control-label col-12" })
                                            <div class="col-12">
                                                @Html.EditorFor(model => model.ExtraLargeQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ExtraLargeQuantity, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
                <div class="form-group">
                    <button type="submit" class="btn" style="background-color:#E97128;color:white">
                        <img src="~/Content/Images/plus.svg" />
                        Add
                    </button>
                </div>
            </div>
        </div>
    }

<div  class="mb-2">
    @Html.ActionLink("view products", "Products")
</div>


<script src="~/Content/js/content-file-input.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
<script>
    $(document).ready(function () {
        bsCustomFileInput.init();
    });

    //var img1_sizeError = document.getElementById("image1_sizeError");
    //var img1_formatError = document.getElementById("image1_formatError");
    //var img1_File = document.getElementById("image1_Browse");


    var productPrice = document.getElementById("product-price");
    var productDiscount = document.getElementById("product-discount");

    ////image1 read
    //$(document).ready(function () {
    //    $("#image1_Browse").change(function () {
    //        var File = this.files;
    //        if (File && File[0]) {
    //            var file = File[0];
    //            var reader = new FileReader;
    //            var image = new Image;

    //            reader.readAsDataURL(file);
    //            reader.onload = function (_file) {
    //                image.src = _file.target.result;
    //                image.onload = function () {
    //                    var height = this.height;
    //                    var width = this.width;
    //                    var type = file.type;
    //                    var size = ~~(file.size / 1024) + "KB";
    //                    $("#targetImg1").attr('src', _file.target.result);
    //                    $("#img1_Preview").show();
    //                }
    //            }
    //        }
    //    })
    //})



    $(".js-example-tokenizer").select2({
        tags: true,
        tokenSeparators: [',', ' '],
        selectOnClose: true,
    });

    function GetProductTotalPrice() {
        SetProductTotalPrice(productPrice.value, productDiscount.value);
    }

    $('#product-price').bind('input', function () {
        GetProductTotalPrice();
    });

     $('#product-discount').bind('input', function () {
        GetProductTotalPrice();
    });

</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
