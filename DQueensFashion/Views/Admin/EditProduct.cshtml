@model DQueensFashion.Models.EditProductViewModel
@using DQueensFashion.Utilities

@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Views/Shared/_dashboardLayout.cshtml";
}
<script src="~/Content/js/jquery.js"></script>

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
<style>
    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #212529;
    }
</style>





@using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <div class="form-horizontal">
            <div style="text-align:right;margin-bottom:10px;">
                <a href="@Url.Action("EditProductImages",new { id = Model.Id })" class="btn btn-sm" , style="background-color:#E97128;color:white">
                    <img src="~/Content/Images/edit.svg" />
                    Edit product images
                </a>

            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CustomMadeCategory)
            @Html.HiddenFor(model => model.ReadyMadeCategory)
            @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="col-12">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label  col-12" })
                                    <div class="col-12">
                                        <select class="form-control" name="@Html.NameFor(m=>m.CategoryId)">
                                            @foreach (var item in Model.Categories)
                                            {
                                                <option value="@item.Id" selected="@item.Selected">@item.Name</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-12" })
                            <div class="col-12">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 5 })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    <select class="form-control js-example-tokenizer" multiple="multiple" name="Tags" style="border:1px solid #ced4da">
                                        @foreach (var tags in Model.Tags)
                                        {
                                            <option selected="selected">@tags</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body" style="padding-bottom:28px">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-12" })


                                    <div class="col-12">
                                        @if (Model.ReadyMadeCategory)
                                        {
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "ProductQty" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="col-12">
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "product-price" } })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="col-12">
                                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @id = "product-discount" } })
                                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.Label("Total", htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="col-12">
                                        <input type="text" value="@Model.SubTotal" disabled class="form-control" id="product-total-price" />
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            @{

                if (Model.CustomMadeCategory)
                {
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                CUSTOM MADE BODY SPECIFICATIONS
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <div class="col-12">
                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(m => m.WaistLength)
                                                    @Html.LabelFor(m => m.WaistLength)
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <div class="col-12">
                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(m => m.BurstSize)
                                                    @Html.LabelFor(m => m.BurstSize)
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <div class="col-12">
                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(m => m.ShoulderLength)
                                                    @Html.LabelFor(m => m.ShoulderLength)
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                if (Model.ReadyMadeCategory)
                {
                    <div class="card">
                        <div class="card-header">
                            READY MADE SIZES
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ExtraSmallQuantity, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.ExtraSmallQuantity, new { htmlAttributes = new { @class = "form-control", @id = "xsQty" } })
                                            @Html.ValidationMessageFor(model => model.ExtraSmallQuantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SmallQuantiy, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.SmallQuantiy, new { htmlAttributes = new { @class = "form-control", @id = "smQty" } })
                                            @Html.ValidationMessageFor(model => model.SmallQuantiy, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MediumQuantiy, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.MediumQuantiy, new { htmlAttributes = new { @class = "form-control", @id = "mQty" } })
                                            @Html.ValidationMessageFor(model => model.MediumQuantiy, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LargeQuantity, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.LargeQuantity, new { htmlAttributes = new { @class = "form-control", @id = "lQty" } })
                                            @Html.ValidationMessageFor(model => model.LargeQuantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ExtraLargeQuantity, htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            @Html.EditorFor(model => model.ExtraLargeQuantity, new { htmlAttributes = new { @class = "form-control", @id = "xlQty" } })
                                            @Html.ValidationMessageFor(model => model.ExtraLargeQuantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 col-6">
                                    <div class="form-group">
                                        @Html.Label("Total Qty", htmlAttributes: new { @class = "control-label col-12" })
                                        <div class="col-12">
                                            <input type="text" readonly value="@Model.Quantity" id="qtyDisplay" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            }

        </div>
            <div class="form-group">
                <button type="submit" class="btn" style="background-color:#E97128;color:white">
                    <img src="~/Content/Images/edit.svg" />
                    Edit
                </button>
            </div>
        </div>
    </div>
}

<div class="mb-2">
    @Html.ActionLink("view products", "Products")
</div>


































<script src="~/Content/js/content-file-input.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
<script>
    $(document).ready(function () {
        bsCustomFileInput.init();
    });

    var productPrice = document.getElementById("product-price");
    var productDiscount = document.getElementById("product-discount");

    var productQty = document.getElementById("ProductQty");
    var qtyDisplay = document.getElementById("qtyDisplay");
    var xsQty = document.getElementById("xsQty");
    var smQty = document.getElementById("smQty");
    var mQty = document.getElementById("mQty");
    var lQty = document.getElementById("lQty");
    var xlQty = document.getElementById("xlQty");

    $(".js-example-tokenizer").select2({
        tags: true,
        tokenSeparators: [',', ' '],
        selectOnClose: true,
    });

     function GetProductTotalPrice() {
        SetProductTotalPrice(productPrice.value, productDiscount.value);
    }

    $('#product-price').bind('input', function () {
        GetProductTotalPrice();
    });

     $('#product-discount').bind('input', function () {
        GetProductTotalPrice();
    });
    
    $('#xsQty').bind('input', function () {
        productQty.value = CalculateTotalQuantity();
        qtyDisplay.value = CalculateTotalQuantity();
    });

    $('#smQty').bind('input', function () {
        productQty.value = CalculateTotalQuantity();
        qtyDisplay.value = CalculateTotalQuantity();
    });
    
    $('#mQty').bind('input', function () {
        productQty.value = CalculateTotalQuantity();
        qtyDisplay.value = CalculateTotalQuantity();
    });

    
    $('#lQty').bind('input', function () {
        productQty.value = CalculateTotalQuantity();
        qtyDisplay.value = CalculateTotalQuantity();
    });
    
    $('#xlQty').bind('input', function () {
        productQty.value = CalculateTotalQuantity();
        qtyDisplay.value = CalculateTotalQuantity();
    });

</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
